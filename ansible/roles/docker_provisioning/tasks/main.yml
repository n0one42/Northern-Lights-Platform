# ansible/roles/docker_provisioning/tasks/main.yml
---
# * ---------------------------------------------------------------------------------------- * #
# ?                          Docker Provisioning Role - Main Orchestrator                     * #
# * ---------------------------------------------------------------------------------------- * #
#
# This is the main task file that orchestrates the Docker provisioning process.
# It implements the three-pillar security model with optimized execution paths:
# 1. Host-Container Isolation (userns-remap)
# 2. Container-Container Isolation (Named Volumes)
# 3. Intra-Container Security (Non-root user)
#
# Execution Paths:
# - FULL INSTALLATION: Complete setup for new Docker installations
# - CONFIG UPDATE: Update configurations for existing Docker installations
# - VALIDATION ONLY: Skip all changes when everything is up-to-date

# * ---------------------------------------------------------------------------------------- * #
# ?                                    Pre-Installation Phase                                 * #
# * ---------------------------------------------------------------------------------------- * #

- name: Run enhanced preflight checks with conflict detection
  ansible.builtin.import_tasks: preflight.yml
  tags:
    - docker
    - docker-preflight
    - preflight
    - always

# * ---------------------------------------------------------------------------------------- * #
# ?                                    Full Installation Path                                 * #
# * ---------------------------------------------------------------------------------------- * #
# These tasks only run when Docker is NOT installed

- name: Setup host system for Docker (Full Installation Path)
  ansible.builtin.import_tasks: host_setup.yml
  when: not docker_provisioning_skip_host_setup | default(false)
  tags:
    - docker
    - docker-host
    - host-setup

- name: Create Docker filesystem structure (Full Installation Path)
  ansible.builtin.import_tasks: filesystem.yml
  when: not docker_provisioning_skip_filesystem | default(false)
  tags:
    - docker
    - docker-filesystem
    - filesystem

- name: Install Docker CE and docker-compose plugin (Full Installation Path)
  ansible.builtin.import_tasks: install_docker.yml
  when: not docker_provisioning_skip_installation | default(false)
  tags:
    - docker
    - docker-install
    - install

# * ---------------------------------------------------------------------------------------- * #
# ?                                    Configuration Phase                                    * #
# * ---------------------------------------------------------------------------------------- * #
# These tasks run for both new installations and configuration updates

- name: Configure Docker daemon (Always check for updates)
  ansible.builtin.import_tasks: daemon_config.yml
  when: docker_provisioning_execution_path in ['full_installation', 'config_update_only']
  tags:
    - docker
    - docker-config
    - config

- name: Configure Docker networking (When configuration needed)
  ansible.builtin.import_tasks: networking.yml
  when: docker_provisioning_execution_path in ['full_installation', 'config_update_only']
  tags:
    - docker
    - docker-network
    - network

- name: Apply security hardening (When configuration needed)
  ansible.builtin.import_tasks: security.yml
  when: docker_provisioning_execution_path in ['full_installation', 'config_update_only']
  tags:
    - docker
    - docker-security
    - security

# * ---------------------------------------------------------------------------------------- * #
# ?                                    Validation Phase                                       * #
# * ---------------------------------------------------------------------------------------- * #
# Always run validation to ensure everything is configured correctly

- name: Run post-installation validation (Always run)
  ansible.builtin.import_tasks: validation.yml
  tags:
    - docker
    - docker-validation
    - validation
    - always

# * ---------------------------------------------------------------------------------------- * #
# ?                                    Performance Summary                                    * #
# * ---------------------------------------------------------------------------------------- * #

- name: Calculate execution time
  ansible.builtin.set_fact:
    docker_provisioning_execution_time: "{{ (ansible_date_time.epoch | int) - (docker_provisioning_start_time | default(ansible_date_time.epoch) | int) }}"
  tags:
    - docker
    - docker-summary
    - always

- name: Display provisioning completion summary
  ansible.builtin.debug:
    msg:
      - "╔════════════════════════════════════════════════════════════╗"
      - "║          Docker Provisioning Complete - ADR-001           ║"
      - "╠════════════════════════════════════════════════════════════╣"
      - "║ Execution Path: {{ docker_provisioning_execution_path | upper | ljust(44) }}║"
      - "║ Execution Time: {{ docker_provisioning_execution_time | default('0') }}s{{ ' ' * (43 - docker_provisioning_execution_time | default('0') | string | length) }}║"
      - "╠════════════════════════════════════════════════════════════╣"
      - "║ Three Pillars Security Model Successfully Implemented:     ║"
      - "║                                                            ║"
      - "║ ✓ Pillar 1: Host-Container Isolation                      ║"
      - "║   └─ userns-remap: {{ docker_provisioning_dockremap_user | ljust(39) }}║"
      - "║                                                            ║"
      - "║ ✓ Pillar 2: Container-Container Isolation                 ║"
      - "║   └─ Named Volumes enforced, ICC disabled                 ║"
      - "║                                                            ║"
      - "║ ✓ Pillar 3: Intra-Container Security                      ║"
      - "║   └─ Standard UID: {{ docker_provisioning_container_internal_uid | ljust(38) }}║"
      - "╠════════════════════════════════════════════════════════════╣"
      - "║ Optimizations Applied:                                    ║"
      - "{% if docker_provisioning_execution_path == 'validation_only' %}"
      - "║   • Skipped all tasks (configuration up-to-date)          ║"
      - "║   • Saved ~60-90 seconds vs full execution                ║"
      - "{% elif docker_provisioning_execution_path == 'config_update_only' %}"
      - "║   • Skipped installation tasks                            ║"
      - "║   • Updated only changed configurations                   ║"
      - "║   • Saved ~30-45 seconds vs full execution                ║"
      - "{% else %}"
      - "║   • Full installation completed                           ║"
      - "║   • All security features configured                      ║"
      - "{% endif %}"
      - "╠════════════════════════════════════════════════════════════╣"
      - "║ Security Tools Available:                                 ║"
      - "║   • {{ docker_provisioning_docker_root }}/scripts/security-compliance-check.sh"
      - "║   • {{ docker_provisioning_docker_root }}/scripts/docker-network-policy.sh"
      - "╚════════════════════════════════════════════════════════════╝"
  tags:
    - docker
    - docker-summary
    - always
