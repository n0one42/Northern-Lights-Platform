# {{ ansible_managed }}
# ansible/roles/docker_provisioning/templates/docker.env.j2
# Docker service environment variables

##############################################################################
#                     DOCKER SERVICE ENVIRONMENT                            #
##############################################################################

# Docker daemon configuration path
DOCKER_CONFIG=/etc/docker

# Docker data root directory
DOCKER_DATA_ROOT={{ docker_provisioning_data_root }}

# Docker runtime root directory
DOCKER_RUNTIME_ROOT=/run/docker

# Docker socket path
DOCKER_HOST=unix:///var/run/docker.sock

# Docker buildkit
DOCKER_BUILDKIT=1

# Docker CLI experimental features
{% if docker_provisioning_enable_experimental | default(false) %}
DOCKER_CLI_EXPERIMENTAL=enabled
{% else %}
DOCKER_CLI_EXPERIMENTAL=disabled
{% endif %}

##############################################################################
#                        SECURITY CONFIGURATION                             #
##############################################################################

# User namespace remapping
{% if docker_provisioning_enable_userns_remap | default(true) %}
DOCKER_USERNS_REMAP={{ docker_provisioning_userns_remap | default('dockremap:dockremap') }}
{% endif %}

# Content trust (image signing)
{% if docker_provisioning_enable_content_trust | default(false) %}
DOCKER_CONTENT_TRUST=1
DOCKER_CONTENT_TRUST_SERVER={{ docker_provisioning_content_trust_server | default('https://notary.docker.io') }}
{% endif %}

# Security options
DOCKER_SECCOMP_PROFILE={{ docker_provisioning_seccomp_profile | default('default') }}

##############################################################################
#                        NETWORKING CONFIGURATION                           #
##############################################################################

# Default bridge network
DOCKER_BRIDGE={{ docker_provisioning_bridge_name | default('docker0') }}

# IPv6 support
{% if docker_provisioning_enable_ipv6 | default(false) %}
DOCKER_ENABLE_IPV6=true
DOCKER_IPV6_CIDR={{ docker_provisioning_ipv6_cidr | default('2001:db8:1::/64') }}
{% endif %}

# DNS configuration
{% if docker_provisioning_dns_servers is defined %}
DOCKER_DNS_SERVERS={{ docker_provisioning_dns_servers | join(',') }}
{% endif %}

{% if docker_provisioning_dns_search is defined %}
DOCKER_DNS_SEARCH={{ docker_provisioning_dns_search | join(',') }}
{% endif %}

##############################################################################
#                         LOGGING CONFIGURATION                             #
##############################################################################

# Log level
DOCKER_LOG_LEVEL={{ docker_provisioning_log_level | default('info') }}

# Log driver
DOCKER_LOG_DRIVER={{ docker_provisioning_log_driver | default('json-file') }}

{% if docker_provisioning_log_opts is defined %}
# Log options
{% for key, value in docker_provisioning_log_opts.items() %}
DOCKER_LOG_OPT_{{ key | upper | replace('-', '_') }}={{ value }}
{% endfor %}
{% endif %}

##############################################################################
#                       PERFORMANCE CONFIGURATION                           #
##############################################################################

# Max concurrent downloads
DOCKER_MAX_CONCURRENT_DOWNLOADS={{ docker_provisioning_max_concurrent_downloads | default(3) }}

# Max concurrent uploads
DOCKER_MAX_CONCURRENT_UPLOADS={{ docker_provisioning_max_concurrent_uploads | default(5) }}

# Max download attempts
DOCKER_MAX_DOWNLOAD_ATTEMPTS={{ docker_provisioning_max_download_attempts | default(5) }}

##############################################################################
#                        REGISTRY CONFIGURATION                             #
##############################################################################

{% if docker_provisioning_registry_mirrors is defined %}
# Registry mirrors
DOCKER_REGISTRY_MIRRORS={{ docker_provisioning_registry_mirrors | join(',') }}
{% endif %}

{% if docker_provisioning_insecure_registries is defined %}
# Insecure registries (use with caution)
DOCKER_INSECURE_REGISTRIES={{ docker_provisioning_insecure_registries | join(',') }}
{% endif %}

##############################################################################
#                      CONTAINER DEFAULT SETTINGS                           #
##############################################################################

# Default container user
DOCKER_DEFAULT_USER={{ docker_provisioning_container_default_user | default('app') }}
DOCKER_DEFAULT_UID={{ docker_provisioning_container_default_uid | default(1337) }}
DOCKER_DEFAULT_GID={{ docker_provisioning_container_default_gid | default(1337) }}

# Container capabilities
DOCKER_DEFAULT_CAP_DROP=ALL
DOCKER_DEFAULT_CAP_ADD={{ docker_provisioning_default_capabilities | default(['CHOWN', 'DAC_OVERRIDE', 'SETGID', 'SETUID']) | join(',') }}

# Container security options
DOCKER_DEFAULT_SECURITY_OPT={{ docker_provisioning_default_security_opts | default(['no-new-privileges:true', 'apparmor:docker-default']) | join(',') }}

##############################################################################
#                        METRICS CONFIGURATION                              #
##############################################################################

{% if docker_provisioning_enable_metrics | default(false) %}
# Metrics endpoint
DOCKER_METRICS_ENABLED=true
DOCKER_METRICS_ADDR={{ docker_provisioning_metrics_addr | default('127.0.0.1:9323') }}
{% endif %}

##############################################################################
#                          PROXY CONFIGURATION                              #
##############################################################################

{% if docker_provisioning_http_proxy is defined %}
# HTTP proxy
HTTP_PROXY={{ docker_provisioning_http_proxy }}
http_proxy={{ docker_provisioning_http_proxy }}
{% endif %}

{% if docker_provisioning_https_proxy is defined %}
# HTTPS proxy
HTTPS_PROXY={{ docker_provisioning_https_proxy }}
https_proxy={{ docker_provisioning_https_proxy }}
{% endif %}

{% if docker_provisioning_no_proxy is defined %}
# No proxy list
NO_PROXY={{ docker_provisioning_no_proxy | join(',') }}
no_proxy={{ docker_provisioning_no_proxy | join(',') }}
{% endif %}

##############################################################################
#                        ADDITIONAL CONFIGURATION                           #
##############################################################################

# Compose project name prefix
COMPOSE_PROJECT_NAME={{ docker_provisioning_compose_project_prefix | default('nlp') }}

# Compose file separator
COMPOSE_FILE_SEPARATOR={{ docker_provisioning_compose_file_separator | default(':') }}

# Compose parallel limit
COMPOSE_PARALLEL_LIMIT={{ docker_provisioning_compose_parallel_limit | default(64) }}

# Compose HTTP timeout
COMPOSE_HTTP_TIMEOUT={{ docker_provisioning_compose_http_timeout | default(60) }}

# Custom environment variables
{% if docker_provisioning_custom_env_vars is defined %}
{% for key, value in docker_provisioning_custom_env_vars.items() %}
{{ key }}={{ value }}
{% endfor %}
{% endif %}
